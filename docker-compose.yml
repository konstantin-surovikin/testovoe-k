services:
  web:
    image: surovikin-testovoe/php:latest
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    working_dir: /app
    environment:
      XDEBUG_MODE: "develop,debug"
      XDEBUG_CONFIG: "log_level=1
                      log=/app/xdebug.log
                      client_host=${XDEBUG_CLIENT_HOST}
                      client_port=${XDEBUG_CLIENT_PORT}
                      idekey=${XDEBUG_IDE_KEY}
                      ${XDEBUG_EXTRA_PARAMS}"
      PHP_IDE_CONFIG: "serverName=${APP_URL}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - default

  worker:
    image: surovikin-testovoe/php:latest
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - default
    command:
      - php
      - artisan
      - queue:work

  nginx:
    image: nginx:stable-alpine
    depends_on:
      - web
    volumes:
      - .:/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: "${RESTART}"
    ports:
      - 80:80
      - 443:443
    networks:
      - default

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: "${DB_DATABASE}"
      POSTGRES_PASSWORD: "${DB_USERNAME}"
      POSTGRES_DB: "${DB_PASSWORD}"
    healthcheck:
      test: ["CMD", "psql", "-U", "${DB_USERNAME}", "-d", "${DB_DATABASE}", "-c", "SELECT 1"]
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - default

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 10s
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - default

volumes:
  postgres_data:
